//
// Mindbox.PostAddress, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
//
// Generated by DuoCode Compiler 0.3.878.0 BETA
//
(function Mindbox_PostAddress() {
"use strict";
var $asm = {
    fullName: "Mindbox.PostAddress",
    anonymousTypes: [],
    types: [],
    $getAttrs: function() {
        return [new System.Reflection.AssemblyTitleAttribute.ctor("ClassLibrary"), new System.Reflection.AssemblyDescriptionAttribute.ctor(""), 
            new System.Reflection.AssemblyConfigurationAttribute.ctor(""), new System.Reflection.AssemblyCompanyAttribute.ctor(""), 
            new System.Reflection.AssemblyProductAttribute.ctor("ClassLibrary"), new System.Reflection.AssemblyCopyrightAttribute.ctor("Copyright \xA9  2015"), 
            new System.Reflection.AssemblyTrademarkAttribute.ctor(""), new System.Reflection.AssemblyCultureAttribute.ctor(""), 
            new System.Reflection.AssemblyVersionAttribute.ctor("1.0.0.0"), new System.Reflection.AssemblyFileVersionAttribute.ctor("1.0.0.0"), 
            new DuoCode.Runtime.CompilerAttribute.ctor("0.3.878.0 BETA")];
    }
};
var $g = (typeof(global) !== "undefined" ? global : window);
var Mindbox = $g.Mindbox = $g.Mindbox || {};
Mindbox.PostAddress = Mindbox.PostAddress || {};
var $d = DuoCode.Runtime;
$d.$assemblies["Mindbox.PostAddress"] = $asm;
Mindbox.PostAddress.AutocompleteDefaults = $d.declare("Mindbox.PostAddress.AutocompleteDefaults", System.Object, 
    0, $asm, function($t, $p) {
        $t.ctor = function AutocompleteDefaults() {
            $t.$baseType.ctor.call(this);
        };
        $t.ctor.prototype = $p;
        $p.OnSuccess = function AutocompleteDefaults_OnSuccess(autocompleteResult, responseStatus, jqXhr) {
            console.log("Default Autocomplete OnSuccess");
            for (var $i = 0, $length = autocompleteResult.storage.length; $i != $length; $i++) {
                var result = autocompleteResult.storage[$i];
                console.log(result);
            }
        };
    });
Mindbox.PostAddress.Defaults = $d.declare("Mindbox.PostAddress.Defaults", System.Object, 0, $asm, function($t, $p) {
    $t.cctor = function() {
        $t.$Autocomplete$k__BackingField = null;
        $t().set_Autocomplete(new Mindbox.PostAddress.AutocompleteDefaults.ctor());
    };
    $t.get_Autocomplete = function Defaults_get_Autocomplete() { return $t().$Autocomplete$k__BackingField; };
    $t.set_Autocomplete = function Defaults_set_Autocomplete(value) { $t().$Autocomplete$k__BackingField = value;return value; };
});
Mindbox.PostAddress.PostAddress = $d.declare("Mindbox.PostAddress.PostAddress", System.Object, 0, $asm, 
    function($t, $p) {
        $t.cctor = function() {
            $t.UserDefinedObjectTypeFullName = "\u041F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u0441\u043A\u0438\u0439";
            $t.CityObjectTypeFullName = "\u0413\u043E\u0440\u043E\u0434";
            $t.StreetObjectTypeFullName = "\u0423\u043B\u0438\u0446\u0430";
            $t.$ServerUrl$k__BackingField = null;
            $t().set_ServerUrl("https://mindbox-services.staging.directcrm.ru");
        };
        $t.get_ServerUrl = function PostAddress_get_ServerUrl() { return $t().$ServerUrl$k__BackingField; };
        $t.set_ServerUrl = function PostAddress_set_ServerUrl(value) { $t().$ServerUrl$k__BackingField = value;return value; };
        $t.GetSettlementById = function PostAddress_GetSettlementById() {
            Mindbox.PostAddress.PostAddress.DebugPrint();

            return "asdasfa";
        };
        $t.Autocomplete = function PostAddress_Autocomplete(search, callback) {
            var options = (function() {
                var $obj = new (DuoCode.JQuery.JsonAjaxSettings$1(Array).ctor)();
                $obj.set_IsCrossDomain(true);
                $obj.set_Url(String.Format("{0}/v1/postaddress/autocomplete/simplesettlements/for-country/1?searchValue={1}", 
                    $d.array(System.Object, [$t().get_ServerUrl(), search])));
                $obj.set_JsonpCallbackParameterName("jsonpCallback");
                $obj.set_DataType(4 /* AjaxDataType.jsonp */);
                $obj.set_Method(1 /* Method.GET */);
                $obj.set_OnSuccess($d.delegate(function(data, status, jqXhr) {
                    var listResult = System.Linq.Enumerable.ToList(Mindbox.PostAddress.SimpleSettlementAutocompleteViewModel, 
                        data);

                    if (callback != null)
                        callback(listResult);
                    else
                        Mindbox.PostAddress.Defaults().get_Autocomplete().OnSuccess(listResult, status, 
                            jqXhr);
                }, this));
                return $obj;
            }).call(this);

            $.ajax(options);
        };
        $t.DebugPrint = function PostAddress_DebugPrint() {
            console.log(String.Format("Url: {0}", $d.array(System.Object, [$t().get_ServerUrl()])));
        };
    });
Mindbox.PostAddress.ResultInfo = $d.declare("Mindbox.PostAddress.ResultInfo", System.Object, 0, $asm, 
    function($t, $p) {
        $t.ctor = function ResultInfo() {
            $t.$baseType.ctor.call(this);
        };
        $t.ctor.prototype = $p;
    });
Mindbox.PostAddress.SimpleSettlementAutocompleteViewModel = $d.declare("Mindbox.PostAddress.SimpleSettlementAutocompleteViewModel", 
    System.Object, 0, $asm, function($t, $p) {
        $t.$ator = function() {
            this.postIndex = null;
            this.regionName = null;
            this.districtName = null;
            this.settlementId = null;
            this.settlementName = null;
            this.streetName = null;
            this.streetTypeId = null;
            this.description = null;
        };
        $t.ctor = function SimpleSettlementAutocompleteViewModel() {
            $t.$baseType.ctor.call(this);
        };
        $t.ctor.prototype = $p;
        $t.ctor$1 = function SimpleSettlementAutocompleteViewModel(settlement, postIndex, street) {
            $t.$baseType.ctor.call(this);
            this.FillBySettlement(settlement);

            if (postIndex != null)
                this.postIndex = $d.nv(postIndex).ToString();

            if (street != null) {
                this.streetName = street.get_Name();
                this.streetTypeId = street.get_ObjectType().get_Id().ToString();
            }
        };
        $t.ctor$1.prototype = $p;
        $p.FillBySettlement = function SimpleSettlementAutocompleteViewModel_FillBySettlement(settlement) {
            if (settlement == null)
                throw new System.ArgumentNullException.ctor$1("settlement");

            this.settlementId = settlement.get_Id().ToString();
            this.regionName = settlement.get_Region() != null ? settlement.get_Region().get_Name() + " " + settlement.get_Region().get_ObjectType().get_FullName() : null;
            this.districtName = settlement.get_District() != null ? settlement.get_District().get_Name() + " " + settlement.get_District().get_ObjectType().get_FullName() : "";
            this.settlementName = settlement.get_Name();

            this.description = settlement.get_ObjectType().get_FullName().toLowerCase();

            if (settlement.get_Region() != null) {
                // специальный случай: если регион имеет тип "Город" (напр., Москва), то не добавляем его к описанию
                if (settlement.get_Region().get_ObjectType().get_FullName() != Mindbox.PostAddress.PostAddress().CityObjectTypeFullName)
                    this.description += ", " + settlement.get_Region().get_Name() + " " + settlement.get_Region().get_ObjectType().get_FullName().toLowerCase();
            }

            if (settlement.get_District() != null) {
                this.description += ", " + settlement.get_District().get_Name() + " " + settlement.get_District().get_ObjectType().get_FullName().toLowerCase();
            }
        };
    });
Mindbox.PostAddress.Street = $d.declare("Mindbox.PostAddress.Street", System.Object, 0, $asm, function($t, $p) {
    $t.$ator = function() {
        this.$Name$k__BackingField = null;
        this.$ObjectType$k__BackingField = null;
    };
    $t.ctor = function Street() {
        $t.$baseType.ctor.call(this);
    };
    $t.ctor.prototype = $p;
    $p.get_Name = function Street_get_Name() { return this.$Name$k__BackingField; };
    $p.set_Name = function Street_set_Name(value) { this.$Name$k__BackingField = value;return value; };
    $p.get_ObjectType = function Street_get_ObjectType() { return this.$ObjectType$k__BackingField; };
    $p.set_ObjectType = function Street_set_ObjectType(value) { this.$ObjectType$k__BackingField = value;return value; };
});
Mindbox.PostAddress.Settlement = $d.declare("Mindbox.PostAddress.Settlement", System.Object, 0, $asm, 
    function($t, $p) {
        $t.$ator = function() {
            this.$Id$k__BackingField = 0;
            this.$Region$k__BackingField = null;
            this.$District$k__BackingField = null;
            this.$Name$k__BackingField = null;
            this.$ObjectType$k__BackingField = null;
        };
        $t.ctor = function Settlement() {
            $t.$baseType.ctor.call(this);
        };
        $t.ctor.prototype = $p;
        $p.get_Id = function Settlement_get_Id() { return this.$Id$k__BackingField; };
        $p.set_Id = function Settlement_set_Id(value) { this.$Id$k__BackingField = value;return value; };
        $p.get_Region = function Settlement_get_Region() { return this.$Region$k__BackingField; };
        $p.set_Region = function Settlement_set_Region(value) { this.$Region$k__BackingField = value;return value; };
        $p.get_District = function Settlement_get_District() { return this.$District$k__BackingField; };
        $p.set_District = function Settlement_set_District(value) { this.$District$k__BackingField = value;return value; };
        $p.get_Name = function Settlement_get_Name() { return this.$Name$k__BackingField; };
        $p.set_Name = function Settlement_set_Name(value) { this.$Name$k__BackingField = value;return value; };
        $p.get_ObjectType = function Settlement_get_ObjectType() { return this.$ObjectType$k__BackingField; };
        $p.set_ObjectType = function Settlement_set_ObjectType(value) { this.$ObjectType$k__BackingField = value;return value; };
    });
Mindbox.PostAddress.District = $d.declare("Mindbox.PostAddress.District", System.Object, 0, $asm, function($t, $p) {
    $t.$ator = function() {
        this.$Name$k__BackingField = null;
        this.$ObjectType$k__BackingField = null;
    };
    $t.ctor = function District() {
        $t.$baseType.ctor.call(this);
    };
    $t.ctor.prototype = $p;
    $p.get_Name = function District_get_Name() { return this.$Name$k__BackingField; };
    $p.set_Name = function District_set_Name(value) { this.$Name$k__BackingField = value;return value; };
    $p.get_ObjectType = function District_get_ObjectType() { return this.$ObjectType$k__BackingField; };
    $p.set_ObjectType = function District_set_ObjectType(value) { this.$ObjectType$k__BackingField = value;return value; };
});
Mindbox.PostAddress.Region = $d.declare("Mindbox.PostAddress.Region", System.Object, 0, $asm, function($t, $p) {
    $t.$ator = function() {
        this.$Name$k__BackingField = null;
        this.$ObjectType$k__BackingField = null;
    };
    $t.ctor = function Region() {
        $t.$baseType.ctor.call(this);
    };
    $t.ctor.prototype = $p;
    $p.get_Name = function Region_get_Name() { return this.$Name$k__BackingField; };
    $p.set_Name = function Region_set_Name(value) { this.$Name$k__BackingField = value;return value; };
    $p.get_ObjectType = function Region_get_ObjectType() { return this.$ObjectType$k__BackingField; };
    $p.set_ObjectType = function Region_set_ObjectType(value) { this.$ObjectType$k__BackingField = value;return value; };
});
Mindbox.PostAddress.ObjectType = $d.declare("Mindbox.PostAddress.ObjectType", System.Object, 0, $asm, 
    function($t, $p) {
        $t.$ator = function() {
            this.$FullName$k__BackingField = null;
            this.$Id$k__BackingField = 0;
        };
        $t.ctor = function ObjectType() {
            $t.$baseType.ctor.call(this);
        };
        $t.ctor.prototype = $p;
        $p.get_FullName = function ObjectType_get_FullName() { return this.$FullName$k__BackingField; };
        $p.set_FullName = function ObjectType_set_FullName(value) { this.$FullName$k__BackingField = value;return value; };
        $p.get_Id = function ObjectType_get_Id() { return this.$Id$k__BackingField; };
        $p.set_Id = function ObjectType_set_Id(value) { this.$Id$k__BackingField = value;return value; };
    });
return $asm;
})();
//# sourceMappingURL=Mindbox.PostAddress.js.map
