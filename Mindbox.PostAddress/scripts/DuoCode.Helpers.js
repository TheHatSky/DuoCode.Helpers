//
// DuoCode.Helpers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
//
// Generated by DuoCode Compiler 0.3.878.0 BETA
//
(function DuoCode_Helpers() {
"use strict";
var $asm = {
    fullName: "DuoCode.Helpers",
    anonymousTypes: [],
    types: [],
    $getAttrs: function() {
        return [new System.Reflection.AssemblyTitleAttribute.ctor("ClassLibrary"), new System.Reflection.AssemblyDescriptionAttribute.ctor(""), 
            new System.Reflection.AssemblyConfigurationAttribute.ctor(""), new System.Reflection.AssemblyCompanyAttribute.ctor(""), 
            new System.Reflection.AssemblyProductAttribute.ctor("ClassLibrary"), new System.Reflection.AssemblyCopyrightAttribute.ctor("Copyright \xA9  2015"), 
            new System.Reflection.AssemblyTrademarkAttribute.ctor(""), new System.Reflection.AssemblyCultureAttribute.ctor(""), 
            new System.Reflection.AssemblyVersionAttribute.ctor("1.0.0.0"), new System.Reflection.AssemblyFileVersionAttribute.ctor("1.0.0.0"), 
            new DuoCode.Runtime.CompilerAttribute.ctor("0.3.878.0 BETA")];
    }
};
var $g = (typeof(global) !== "undefined" ? global : window);
var DuoCode = $g.DuoCode = $g.DuoCode || {};
DuoCode.Helpers = DuoCode.Helpers || {};
var $d = DuoCode.Runtime;
$d.$assemblies["DuoCode.Helpers"] = $asm;
DuoCode.Helpers.Color = $d.declare("DuoCode.Helpers.Color", null, 62, $asm, function($t, $p) {
    $t.cctor = function() {
        $t.Violet = new DuoCode.Helpers.Color.ctor$2(204, 50, 206);
        $t.White = new DuoCode.Helpers.Color.ctor$1(1, 1, 1);
        $t.Grey = new DuoCode.Helpers.Color.ctor$1(0.5, 0.5, 0.5);
        $t.Black = new DuoCode.Helpers.Color.ctor$1(0, 0, 0);
        $t.Background = $t().Black;
        $t.DefaultColor = $t().Black;
    };
    $t.ctor = function Color() {
        this.R = 0;
        this.G = 0;
        this.B = 0;
    };
    $t.ctor.prototype = $p;
    $t.ctor$1 = function Color(r, g, b) {
        this.R = r;
        this.G = g;
        this.B = b;
    };
    $t.ctor$1.prototype = $p;
    $t.ctor$2 = function Color(r, g, b) {
        $t.ctor$1.call(this, DuoCode.Helpers.Color.FromByte(r), DuoCode.Helpers.Color.FromByte(g), DuoCode.Helpers.Color.FromByte(b));
    };
    $t.ctor$2.prototype = $p;
    $t.op_Multiply$1 = function Color_op_Multiply$1(k, v) {
        return new DuoCode.Helpers.Color.ctor$1(k * v.R, k * v.G, k * v.B);
    };
    $t.op_Addition = function Color_op_Addition(v1, v2) {
        return new DuoCode.Helpers.Color.ctor$1(v1.R + v2.R, v1.G + v2.G, v1.B + v2.B);
    };
    $t.op_Multiply = function Color_op_Multiply(v1, v2) {
        return new DuoCode.Helpers.Color.ctor$1(v1.R * v2.R, v1.G * v2.G, v1.B * v2.B);
    };
    $t.ToByte = function Color_ToByte(value) {
        value = value > 1 ? 1 : value;
        return (System.Math.Floor$1(value * 255 /* Byte.MaxValue */) | 0);
    };
    $t.FromByte = function Color_FromByte(value) {
        if (value > 255 /* Byte.MaxValue */)
            value = 255 /* Byte.MaxValue */;

        if (value < 0)
            value = 0;

        return value / 255 /* Byte.MaxValue */;
    };
    $p.ToString = function Color_ToString() {
        return String.Format("rgb({0},{1},{2})", $d.array(System.Object, [DuoCode.Helpers.Color.ToByte(this.R), 
            DuoCode.Helpers.Color.ToByte(this.G), DuoCode.Helpers.Color.ToByte(this.B)]));
    };
});
DuoCode.Helpers.DateTimeExtensions = $d.declare("DuoCode.Helpers.DateTimeExtensions", System.Object, 
    0, $asm, function($t, $p) {
        $t.ToLogString = function DateTimeExtensions_ToLogString(dateTime) {
            var milliecondsString = dateTime.get_Millisecond().ToString();
            while (milliecondsString.length <= 2) {
                milliecondsString = "0" + milliecondsString;
            }

            return String.Format("{0} {1} {2}:{3}:{4}.{5}", $d.array(System.Object, [dateTime.get_Day(), 
                DuoCode.Helpers.DateTimeExtensions.ToMonthShortName(dateTime), dateTime.get_Hour(), dateTime.get_Minute(), 
                dateTime.get_Second(), milliecondsString]));
        };
        $t.ToMonthShortName = function DateTimeExtensions_ToMonthShortName(dateTime) {
            return dateTime.get_JsDate().toDateString().split(" ")[1];
        };
    });
DuoCode.Helpers.JsArrayExtensions = $d.declare("DuoCode.Helpers.JsArrayExtensions", System.Object, 0, 
    $asm, function($t, $p) {
        $t.ToList = function JsArrayExtensions_ToList(T, source) {
            return System.Linq.Enumerable.ToList(T, source);
        };
        $t.Count = function JsArrayExtensions_Count(T, source) {
            return System.Linq.Enumerable.Count(T, source);
        };
    });
DuoCode.Helpers.StringExtensions = $d.declare("DuoCode.Helpers.StringExtensions", System.Object, 0, $asm, 
    function($t, $p) {
        $t.TryGet = function StringExtensions_TryGet(T, source) {
            if (!$d.typeOf(T).IsAssignableFrom($d.typeOf(System.Enum)))
                throw new System.InvalidOperationException.ctor$1(String.Format("Type \"{0}\" is not assignable from Enum", 
                    $d.array(System.Object, [$d.typeOf(T).get_Name()])));

            var result = {};
            if (System.Enum.TryParse(T, source, result))
                return result.value;

            return null;
        };
    });
DuoCode.Helpers.Method = $d.declareEnum("DuoCode.Helpers.Method", 45, $asm, 257, ["OPTIONS", "GET", "HEAD", 
    "POST", "PUT", "PATCH", "DELETE", "TRACE", "CONNECT"], [0, 1, 2, 3, 4, 5, 6, 7, 8]);
return $asm;
})();
//# sourceMappingURL=DuoCode.Helpers.js.map
