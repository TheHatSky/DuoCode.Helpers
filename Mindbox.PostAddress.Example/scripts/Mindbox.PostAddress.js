//
// Mindbox.PostAddress, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
//
// Generated by DuoCode Compiler 0.3.878.0 BETA
//
(function Mindbox_PostAddress() {
"use strict";
var $asm = {
    fullName: "Mindbox.PostAddress",
    anonymousTypes: [],
    types: [],
    $getAttrs: function() {
        return [new System.Reflection.AssemblyTitleAttribute.ctor("ClassLibrary"), new System.Reflection.AssemblyDescriptionAttribute.ctor(""), 
            new System.Reflection.AssemblyConfigurationAttribute.ctor(""), new System.Reflection.AssemblyCompanyAttribute.ctor(""), 
            new System.Reflection.AssemblyProductAttribute.ctor("ClassLibrary"), new System.Reflection.AssemblyCopyrightAttribute.ctor("Copyright \xA9  2015"), 
            new System.Reflection.AssemblyTrademarkAttribute.ctor(""), new System.Reflection.AssemblyCultureAttribute.ctor(""), 
            new System.Reflection.AssemblyVersionAttribute.ctor("1.0.0.0"), new System.Reflection.AssemblyFileVersionAttribute.ctor("1.0.0.0"), 
            new DuoCode.Runtime.CompilerAttribute.ctor("0.3.878.0 BETA")];
    }
};
var $g = (typeof(global) !== "undefined" ? global : window);
var Mindbox = $g.Mindbox = $g.Mindbox || {};
Mindbox.PostAddress = Mindbox.PostAddress || {};
var $d = DuoCode.Runtime;
$d.$assemblies["Mindbox.PostAddress"] = $asm;
Mindbox.PostAddress.AutocompleteDefaults = $d.declare("Mindbox.PostAddress.AutocompleteDefaults", System.Object, 
    0, $asm, function($t, $p) {
        $t.ctor = function AutocompleteDefaults() {
            $t.$baseType.ctor.call(this);
        };
        $t.ctor.prototype = $p;
        $p.OnSuccess = function AutocompleteDefaults_OnSuccess(autocompleteResult) {
            var test = $.fn.init("#test").html(String.Empty);
            for (var $i = 0, $length = autocompleteResult.storage.length; $i != $length; $i++) {
                var result = autocompleteResult.storage[$i];
                test.append(String.Format("{0}: {1} - {2} - {3}<br/>", $d.array(System.Object, [result.postIndex, 
                    result.regionName, result.districtName, result.settlementName])));
            }
        };
    });
Mindbox.PostAddress.Defaults = $d.declare("Mindbox.PostAddress.Defaults", System.Object, 0, $asm, function($t, $p) {
    $t.cctor = function() {
        $t.ServerUrl = "https://mindbox-services.staging.directcrm.ru";
        $t.SimpleSettlementInputPanelId = "simple-settlement-input-panel";
        $t.SimpleSettlementInputTextboxId = "simple-settlement-input-textbox";
        $t.ComplexSettlementInputSwitchId = "complex-settlement-input-switch";
        $t.$Autocomplete$k__BackingField = null;
        $t().set_Autocomplete(new Mindbox.PostAddress.AutocompleteDefaults.ctor());
    };
    $t.get_Autocomplete = function Defaults_get_Autocomplete() { return $t().$Autocomplete$k__BackingField; };
    $t.set_Autocomplete = function Defaults_set_Autocomplete(value) { $t().$Autocomplete$k__BackingField = value;return value; };
});
Mindbox.PostAddress.ElementNotFoundException = $d.declare("Mindbox.PostAddress.ElementNotFoundException", 
    System.Exception, 0, $asm, function($t, $p) {
        $t.ctor = function ElementNotFoundException(message) {
            $t.$baseType.ctor$1.call(this, message);
        };
        $t.ctor.prototype = $p;
    });
Mindbox.PostAddress.PostAddress = $d.declare("Mindbox.PostAddress.PostAddress", System.Object, 0, $asm, 
    function($t, $p) {
        $t.cctor = function() {
            $t.JsonpCallbackParameterName = "jsonpCallback";
            $t.UserDefinedObjectTypeFullName = "\u041F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u0441\u043A\u0438\u0439";
            $t.CityObjectTypeFullName = "\u0413\u043E\u0440\u043E\u0434";
            $t.StreetObjectTypeFullName = "\u0423\u043B\u0438\u0446\u0430";
            $t.simpleSettlementInputPanel = null;
            $t.simpleSettlementInputTextbox = null;
            $t.complexSettlementInputSwitch = null;
            $t.$ServerUrl$k__BackingField = null;
            $t.$Debug$k__BackingField = false;
            $t.$SimpleSettlementInputPanelId$k__BackingField = null;
            $t.$SimpleSettlementInputTextboxId$k__BackingField = null;
            $t.$ComplexSettlementInputSwitchId$k__BackingField = null;
            $t().set_ServerUrl(Mindbox.PostAddress.Defaults().ServerUrl);

            $t().set_SimpleSettlementInputPanelId(Mindbox.PostAddress.Defaults().SimpleSettlementInputPanelId);
            $t().set_SimpleSettlementInputTextboxId(Mindbox.PostAddress.Defaults().SimpleSettlementInputTextboxId);
            $t().set_ComplexSettlementInputSwitchId(Mindbox.PostAddress.Defaults().ComplexSettlementInputSwitchId);
        };
        $t.get_ServerUrl = function PostAddress_get_ServerUrl() { return $t().$ServerUrl$k__BackingField; };
        $t.set_ServerUrl = function PostAddress_set_ServerUrl(value) { $t().$ServerUrl$k__BackingField = value;return value; };
        $t.get_Debug = function PostAddress_get_Debug() { return $t().$Debug$k__BackingField; };
        $t.set_Debug = function PostAddress_set_Debug(value) { $t().$Debug$k__BackingField = value;return value; };
        $t.get_SimpleSettlementInputPanelId = function PostAddress_get_SimpleSettlementInputPanelId() { return $t().$SimpleSettlementInputPanelId$k__BackingField; };
        $t.set_SimpleSettlementInputPanelId = function PostAddress_set_SimpleSettlementInputPanelId(value) { $t().$SimpleSettlementInputPanelId$k__BackingField = value;return value; };
        $t.get_SimpleSettlementInputPanel = function PostAddress_get_SimpleSettlementInputPanel() {
            if ($t().simpleSettlementInputPanel == null)
                $t().simpleSettlementInputPanel = document.getElementById($t().get_SimpleSettlementInputPanelId());

            if ($t().simpleSettlementInputPanel == null)
                throw new Mindbox.PostAddress.ElementNotFoundException.ctor("\u041D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D SimpleSettlementInputPanel");

            return $t().simpleSettlementInputPanel;
        };
        $t.get_SimpleSettlementInputTextboxId = function PostAddress_get_SimpleSettlementInputTextboxId() { return $t().$SimpleSettlementInputTextboxId$k__BackingField; };
        $t.set_SimpleSettlementInputTextboxId = function PostAddress_set_SimpleSettlementInputTextboxId(value) { $t().$SimpleSettlementInputTextboxId$k__BackingField = value;return value; };
        $t.get_SimpleSettlementInputTextbox = function PostAddress_get_SimpleSettlementInputTextbox() {
            if ($t().simpleSettlementInputTextbox == null)
                $t().simpleSettlementInputTextbox = document.getElementById($t().get_SimpleSettlementInputTextboxId());

            if ($t().simpleSettlementInputTextbox == null)
                throw new Mindbox.PostAddress.ElementNotFoundException.ctor("\u041D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D SimpleSettlementInputTextbox");

            return $t().simpleSettlementInputTextbox;
        };
        $t.get_ComplexSettlementInputSwitchId = function PostAddress_get_ComplexSettlementInputSwitchId() { return $t().$ComplexSettlementInputSwitchId$k__BackingField; };
        $t.set_ComplexSettlementInputSwitchId = function PostAddress_set_ComplexSettlementInputSwitchId(value) { $t().$ComplexSettlementInputSwitchId$k__BackingField = value;return value; };
        $t.get_ComplexSettlementInputSwitch = function PostAddress_get_ComplexSettlementInputSwitch() {
            if ($t().complexSettlementInputSwitch == null)
                $t().complexSettlementInputSwitch = document.getElementById($t().get_ComplexSettlementInputSwitchId());

            if ($t().complexSettlementInputSwitch == null)
                throw new Mindbox.PostAddress.ElementNotFoundException.ctor("\u041D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D ComplexSettlementInputSwitch");

            return $t().complexSettlementInputSwitch;
        };
        $t.GetSettlementById = function PostAddress_GetSettlementById() {
            return "asdasfa";
        };
        $t.Autocomplete = function PostAddress_Autocomplete(query) {
            Mindbox.PostAddress.PostAddress.Autocomplete$1(query.term, $d.cast(($d.delegate(function(data) {
                var resultData = new Object();
                resultData["results"] = data.map(($d.cast(($d.delegate(function(val) {
                    var item = new Object();
                    item["id"] = query.term;
                    item["text"] = String.Format("{0}: {1} - {2} - {3}", $d.array(System.Object, [val.postIndex, 
                        val.regionName, val.districtName, val.settlementName]));

                    return item;
                }, this)), System.Func$2(Mindbox.PostAddress.SimpleSettlementAutocompleteViewModel, Object))));

                query.callback(resultData);
            }, this)), System.Action$1(Array)));
        };
        $t.Autocomplete$1 = function PostAddress_Autocomplete(search, callback) {
            Mindbox.PostAddress.PostAddress.Log$1("\u041D\u0430\u0447\u0430\u0442 \u0437\u0430\u043F\u0440\u043E\u0441 \u0430\u0432\u0442\u043E\u043A\u043E\u043C\u043F\u043B\u0438\u0442\u0430 \u0434\u043B\u044F \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F '{0}'", 
                $d.array(System.Object, [search]));

            var options = (function() {
                var $obj = new (DuoCode.JQuery.JsonAjaxSettings$1(Array).ctor)();
                $obj.set_IsCrossDomain(true);
                $obj.set_Url(String.Format("{0}/v1/postaddress/autocomplete/simplesettlements/for-country/1?searchValue={1}", 
                    $d.array(System.Object, [$t().get_ServerUrl(), search])));
                $obj.set_JsonpCallbackParameterName($t().JsonpCallbackParameterName);
                $obj.set_DataType(4 /* AjaxDataType.jsonp */);
                $obj.set_Method(1 /* Method.GET */);
                $obj.set_OnSuccess($d.delegate(function(data, status, jqXhr) {
                    Mindbox.PostAddress.PostAddress.Log$1("\u0410\u0432\u0442\u043E\u043A\u043E\u043C\u043F\u043B\u0438\u0442 \u0434\u043B\u044F \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F '{0}' ({1} \u0448\u0442.) \u0443\u0441\u043F\u0435\u0448\u043D\u043E \u043F\u043E\u043B\u0443\u0447\u0435\u043D", 
                        $d.array(System.Object, [search, data.length]));

                    if (callback != null)
                        callback(data);
                    else
                        Mindbox.PostAddress.Defaults().get_Autocomplete().OnSuccess(DuoCode.Helpers.JsArrayExtensions.ToList(Mindbox.PostAddress.SimpleSettlementAutocompleteViewModel, 
                            data));
                }, this));
                return $obj;
            }).call(this);

            $.ajax(options);
        };
        $t.Log = function PostAddress_Log(thing) {
            if (!$t().get_Debug())
                return;

            console.log(String.Format("[{0}]", $d.array(System.Object, [DuoCode.Helpers.DateTimeExtensions.ToLogString(System.DateTime().get_Now())])));
            console.log(thing);
        };
        $t.Log$1 = function PostAddress_Log(format, values) {
            if (!$t().get_Debug())
                return;

            console.log(String.Format("[{0}] {1}", $d.array(System.Object, [DuoCode.Helpers.DateTimeExtensions.ToLogString(System.DateTime().get_Now()), 
                String.Format(format, values)])));
        };
        $t.Initialize = function PostAddress_Initialize(options) {
            Mindbox.PostAddress.PostAddress.Initialize$1(new Mindbox.PostAddress.PostAddressOptions.ctor$1(options));
        };
        $t.Initialize$1 = function PostAddress_Initialize(options) {
            if (options == null)
                options = new Mindbox.PostAddress.PostAddressOptions.ctor();

            $t().set_Debug(options.get_Debug());
            Mindbox.PostAddress.PostAddress.Log$1("\u0412\u043A\u043B\u044E\u0447\u0435\u043D \u0440\u0435\u0436\u0438\u043C \u043E\u0442\u043B\u0430\u0434\u043A\u0438", 
                $d.array(System.Object, []));

            $t().get_SimpleSettlementInputTextbox().onchange = $d.delegate(function(e) {
                var input = e.target;
                Mindbox.PostAddress.PostAddress.Log$1("SimpleSettlementInputTextbox \u0438\u0437\u043C\u0435\u043D\u0435\u043D \u043D\u0430 '{0}'", 
                    $d.array(System.Object, [input.value]));
                Mindbox.PostAddress.PostAddress.Autocomplete$1(input.value, options.get_OnAutocompleteSuccess());
                return true;
            }, this);
        };
    });
Mindbox.PostAddress.PostAddressOptions = $d.declare("Mindbox.PostAddress.PostAddressOptions", System.Object, 
    0, $asm, function($t, $p) {
        $t.$ator = function() {
            this.$Debug$k__BackingField = false;
            this.$OnAutocompleteSuccess$k__BackingField = null;
        };
        $t.ctor = function PostAddressOptions() {
            $t.$baseType.ctor.call(this);
        };
        $t.ctor.prototype = $p;
        $t.ctor$1 = function PostAddressOptions(options) {
            $t.$baseType.ctor.call(this);
            var jsOptions = $d.as(options, Object);
            if (jsOptions == null)
                return;

            this.set_Debug(jsOptions["debug"]);
            this.set_OnAutocompleteSuccess(jsOptions["onAutocompleteSuccess"]);
        };
        $t.ctor$1.prototype = $p;
        $p.get_Debug = function PostAddressOptions_get_Debug() { return this.$Debug$k__BackingField; };
        $p.set_Debug = function PostAddressOptions_set_Debug(value) { this.$Debug$k__BackingField = value;return value; };
        $p.get_OnAutocompleteSuccess = function PostAddressOptions_get_OnAutocompleteSuccess() { return this.$OnAutocompleteSuccess$k__BackingField; };
        $p.set_OnAutocompleteSuccess = function PostAddressOptions_set_OnAutocompleteSuccess(value) { this.$OnAutocompleteSuccess$k__BackingField = value;return value; };
    });
Mindbox.PostAddress.ResultInfo = $d.declare("Mindbox.PostAddress.ResultInfo", System.Object, 0, $asm, 
    function($t, $p) {
        $t.ctor = function ResultInfo() {
            $t.$baseType.ctor.call(this);
        };
        $t.ctor.prototype = $p;
    });
Mindbox.PostAddress.SimpleSettlementAutocompleteViewModel = $d.declare("Mindbox.PostAddress.SimpleSettlementAutocompleteViewModel", 
    System.Object, 0, $asm, function($t, $p) {
        $t.$ator = function() {
            this.postIndex = null;
            this.regionName = null;
            this.districtName = null;
            this.settlementId = null;
            this.settlementName = null;
            this.streetName = null;
            this.streetTypeId = null;
            this.description = null;
        };
        $t.ctor = function SimpleSettlementAutocompleteViewModel() {
            $t.$baseType.ctor.call(this);
        };
        $t.ctor.prototype = $p;
        $t.ctor$1 = function SimpleSettlementAutocompleteViewModel(settlement, postIndex, street) {
            $t.$baseType.ctor.call(this);
            this.FillBySettlement(settlement);

            if (postIndex != null)
                this.postIndex = $d.nv(postIndex).ToString();

            if (street != null) {
                this.streetName = street.get_Name();
                this.streetTypeId = street.get_ObjectType().get_Id().ToString();
            }
        };
        $t.ctor$1.prototype = $p;
        $p.FillBySettlement = function SimpleSettlementAutocompleteViewModel_FillBySettlement(settlement) {
            if (settlement == null)
                throw new System.ArgumentNullException.ctor$1("settlement");

            this.settlementId = settlement.get_Id().ToString();
            this.regionName = settlement.get_Region() != null ? settlement.get_Region().get_Name() + " " + settlement.get_Region().get_ObjectType().get_FullName() : null;
            this.districtName = settlement.get_District() != null ? settlement.get_District().get_Name() + " " + settlement.get_District().get_ObjectType().get_FullName() : "";
            this.settlementName = settlement.get_Name();

            this.description = settlement.get_ObjectType().get_FullName().toLowerCase();

            if (settlement.get_Region() != null) {
                // специальный случай: если регион имеет тип "Город" (напр., Москва), то не добавляем его к описанию
                if (settlement.get_Region().get_ObjectType().get_FullName() != Mindbox.PostAddress.PostAddress().CityObjectTypeFullName)
                    this.description += ", " + settlement.get_Region().get_Name() + " " + settlement.get_Region().get_ObjectType().get_FullName().toLowerCase();
            }

            if (settlement.get_District() != null) {
                this.description += ", " + settlement.get_District().get_Name() + " " + settlement.get_District().get_ObjectType().get_FullName().toLowerCase();
            }
        };
    });
Mindbox.PostAddress.Street = $d.declare("Mindbox.PostAddress.Street", System.Object, 0, $asm, function($t, $p) {
    $t.$ator = function() {
        this.$Name$k__BackingField = null;
        this.$ObjectType$k__BackingField = null;
    };
    $t.ctor = function Street() {
        $t.$baseType.ctor.call(this);
    };
    $t.ctor.prototype = $p;
    $p.get_Name = function Street_get_Name() { return this.$Name$k__BackingField; };
    $p.set_Name = function Street_set_Name(value) { this.$Name$k__BackingField = value;return value; };
    $p.get_ObjectType = function Street_get_ObjectType() { return this.$ObjectType$k__BackingField; };
    $p.set_ObjectType = function Street_set_ObjectType(value) { this.$ObjectType$k__BackingField = value;return value; };
});
Mindbox.PostAddress.Settlement = $d.declare("Mindbox.PostAddress.Settlement", System.Object, 0, $asm, 
    function($t, $p) {
        $t.$ator = function() {
            this.$Id$k__BackingField = 0;
            this.$Region$k__BackingField = null;
            this.$District$k__BackingField = null;
            this.$Name$k__BackingField = null;
            this.$ObjectType$k__BackingField = null;
        };
        $t.ctor = function Settlement() {
            $t.$baseType.ctor.call(this);
        };
        $t.ctor.prototype = $p;
        $p.get_Id = function Settlement_get_Id() { return this.$Id$k__BackingField; };
        $p.set_Id = function Settlement_set_Id(value) { this.$Id$k__BackingField = value;return value; };
        $p.get_Region = function Settlement_get_Region() { return this.$Region$k__BackingField; };
        $p.set_Region = function Settlement_set_Region(value) { this.$Region$k__BackingField = value;return value; };
        $p.get_District = function Settlement_get_District() { return this.$District$k__BackingField; };
        $p.set_District = function Settlement_set_District(value) { this.$District$k__BackingField = value;return value; };
        $p.get_Name = function Settlement_get_Name() { return this.$Name$k__BackingField; };
        $p.set_Name = function Settlement_set_Name(value) { this.$Name$k__BackingField = value;return value; };
        $p.get_ObjectType = function Settlement_get_ObjectType() { return this.$ObjectType$k__BackingField; };
        $p.set_ObjectType = function Settlement_set_ObjectType(value) { this.$ObjectType$k__BackingField = value;return value; };
    });
Mindbox.PostAddress.District = $d.declare("Mindbox.PostAddress.District", System.Object, 0, $asm, function($t, $p) {
    $t.$ator = function() {
        this.$Name$k__BackingField = null;
        this.$ObjectType$k__BackingField = null;
    };
    $t.ctor = function District() {
        $t.$baseType.ctor.call(this);
    };
    $t.ctor.prototype = $p;
    $p.get_Name = function District_get_Name() { return this.$Name$k__BackingField; };
    $p.set_Name = function District_set_Name(value) { this.$Name$k__BackingField = value;return value; };
    $p.get_ObjectType = function District_get_ObjectType() { return this.$ObjectType$k__BackingField; };
    $p.set_ObjectType = function District_set_ObjectType(value) { this.$ObjectType$k__BackingField = value;return value; };
});
Mindbox.PostAddress.Region = $d.declare("Mindbox.PostAddress.Region", System.Object, 0, $asm, function($t, $p) {
    $t.$ator = function() {
        this.$Name$k__BackingField = null;
        this.$ObjectType$k__BackingField = null;
    };
    $t.ctor = function Region() {
        $t.$baseType.ctor.call(this);
    };
    $t.ctor.prototype = $p;
    $p.get_Name = function Region_get_Name() { return this.$Name$k__BackingField; };
    $p.set_Name = function Region_set_Name(value) { this.$Name$k__BackingField = value;return value; };
    $p.get_ObjectType = function Region_get_ObjectType() { return this.$ObjectType$k__BackingField; };
    $p.set_ObjectType = function Region_set_ObjectType(value) { this.$ObjectType$k__BackingField = value;return value; };
});
Mindbox.PostAddress.ObjectType = $d.declare("Mindbox.PostAddress.ObjectType", System.Object, 0, $asm, 
    function($t, $p) {
        $t.$ator = function() {
            this.$FullName$k__BackingField = null;
            this.$Id$k__BackingField = 0;
        };
        $t.ctor = function ObjectType() {
            $t.$baseType.ctor.call(this);
        };
        $t.ctor.prototype = $p;
        $p.get_FullName = function ObjectType_get_FullName() { return this.$FullName$k__BackingField; };
        $p.set_FullName = function ObjectType_set_FullName(value) { this.$FullName$k__BackingField = value;return value; };
        $p.get_Id = function ObjectType_get_Id() { return this.$Id$k__BackingField; };
        $p.set_Id = function ObjectType_set_Id(value) { this.$Id$k__BackingField = value;return value; };
    });
return $asm;
})();
//# sourceMappingURL=Mindbox.PostAddress.js.map
